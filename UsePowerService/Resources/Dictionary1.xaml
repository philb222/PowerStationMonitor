<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:meter="clr-namespace:DllMeter;assembly=DllMeter"
                    xmlns:POptions="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options">

	<!-- Colors ================================================================================================================ -->

	<RadialGradientBrush x:Key="radBrush1" POptions:Freeze="True" >
		<GradientStop Offset="0" Color="AliceBlue"/>
		<GradientStop Offset="1" Color="Blue"/>
	</RadialGradientBrush>

	<RadialGradientBrush x:Key="radBrush2" POptions:Freeze="True">
		<GradientStop Offset="0" Color="AliceBlue"/>
		<GradientStop Offset="1" Color="LightGreen"/>
	</RadialGradientBrush>

	<LinearGradientBrush x:Key="linBrush1" POptions:Freeze="True">
		<GradientStop Offset="0" Color="Aquamarine"/>
		<GradientStop Offset="0.5" Color="Blue"/>
		<GradientStop Offset="1" Color="Violet"/>
	</LinearGradientBrush>

	<SolidColorBrush x:Key="MouseOverColorKey" Color="Red" POptions:Freeze="True"/>
	<SolidColorBrush x:Key="Foreground1" Color="Black" POptions:Freeze="True"/>

	<!-- Button style -->
	<Style x:Key="NormalButton" TargetType="Button"  BasedOn="{StaticResource {x:Type Button}}">

		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="true">
				<Setter Property="FontWeight" Value="Bold"/>
				<Setter Property="FontStyle" Value="Italic"/>
			</Trigger>
		</Style.Triggers>

		<Style.Setters>
			<Setter Property="RenderTransformOrigin" Value=".5, .5"/>
			<Setter Property="RenderTransform">
				<Setter.Value>
					<ScaleTransform >
					</ScaleTransform >
				</Setter.Value>
			</Setter>

			<Setter Property="Background" Value="#7777FF"/>
			<Setter Property="Cursor" Value="Hand"/>
			<Setter Property="OverridesDefaultStyle" Value="true"/>
			<Setter Property="SnapsToDevicePixels" Value="true"/>

			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="Button">
						<Border Name="BtnBorder"
                                BorderBrush="Black" BorderThickness="3" CornerRadius="6"
                                Margin="3, 3, 3, 3"
                                Background="{TemplateBinding Background}">
							<ContentControl Name="Content1"
                                            Margin="1, 1, 1, 1" IsTabStop="False"
                                            Foreground="{TemplateBinding Foreground}">
								<ContentPresenter  Height="{TemplateBinding Height}"
                                                   MinWidth="{TemplateBinding MinWidth}" 
                                                   Width="{TemplateBinding Width}" 
                                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                   RecognizesAccessKey="True"/>
							</ContentControl>
						</Border>
						<ControlTemplate.Triggers>

							<Trigger Property="IsEnabled" Value="False">
								<Setter TargetName="BtnBorder" Property="Background" Value="Gray"/>
								<Setter TargetName="Content1" Property="Foreground" Value="White"/>
							</Trigger>

							<Trigger Property="IsKeyboardFocused" Value="False">
								<Setter Property="BorderBrush" Value="Black"
                                        TargetName="BtnBorder"/>
								<Setter Property="FontWeight" Value="Normal"/>
								<Setter Property="FontStyle" Value="Normal"/>
							</Trigger>

							<Trigger Property="IsKeyboardFocused" Value="True">
								<Setter Property="BorderBrush" Value="{StaticResource MouseOverColorKey}"
                                        TargetName="BtnBorder"/>
								<Setter Property="FontWeight" Value="Bold"/>
								<Setter Property="FontStyle" Value="Italic"/>
							</Trigger>

							<Trigger Property="IsMouseOver" Value="True">
								<Setter Property="BorderBrush" Value="{StaticResource MouseOverColorKey}"
                                        TargetName="BtnBorder"/>
							</Trigger>

							<EventTrigger RoutedEvent="PreviewMouseLeftButtonDown">
								<BeginStoryboard>
									<Storyboard AutoReverse="True" RepeatBehavior="1x">
										<DoubleAnimation Storyboard.TargetProperty="(Button.RenderTransform).(ScaleTransform.ScaleX)"
                                                         From="1" To=".4" Duration="0:0:0.1" />
										<DoubleAnimation Storyboard.TargetProperty="(Button.RenderTransform).(ScaleTransform.ScaleY)"
                                                         From="1" To=".4" Duration="0:0:0.1" />
									</Storyboard>
								</BeginStoryboard>
							</EventTrigger>

						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style.Setters>
	</Style>

	<!-- Label style ======================================================================================= -->
	<Style TargetType="Label">
		<Style.Setters>
			<Setter Property="Foreground" Value="Yellow"/>
			<Setter Property="HorizontalContentAlignment" Value="Center"/>
			<Setter Property="Height" Value="20"/>
			<Setter Property="Padding" Value="0"/>
		</Style.Setters>
	</Style>

	<!-- Label 2 style ======================================================================================= -->
	<Style x:Key="Label2">
		<Style.Setters>
			<Setter Property="Label.FontStyle" Value="Italic"/>
			<Setter Property="Label.Foreground" Value="Yellow"/>
			<Setter Property="Label.Height" Value="20"/>
			<Setter Property="Label.HorizontalContentAlignment" Value="Left"/>
			<Setter Property="Label.Padding" Value="0"/>
			<Setter Property="Label.Width" Value="100"/>
		</Style.Setters>
	</Style>

	<!-- Label 3 style ======================================================================================= -->
	<Style x:Key="Label3">
		<Style.Setters>
			<Setter Property="Label.Foreground" Value="White"/>
			<Setter Property="Label.Height" Value="20"/>
			<Setter Property="Label.HorizontalContentAlignment" Value="Left"/>
			<Setter Property="Label.Padding" Value="0"/>
			<Setter Property="Label.Width" Value="400"/>
		</Style.Setters>
	</Style>

	<!-- Listbox style ======================================================================================= -->
	<Style TargetType="ListBox">
		<Setter Property="Background" Value="Blue"/>
	</Style>

	<!-- ListBoxItem style ======================================================================================= -->
	<Style TargetType="ListBoxItem">
		<Style.Setters>
			<Setter Property="Background" Value="Blue"/>
			<Setter Property="Foreground" Value="Yellow"/>
			<Setter Property="Cursor" Value="Hand"/>

			<!-- Need to override the template for the following triggers to work. -->
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="ListBoxItem">
						<TextBlock x:Name="CustomItem">
							<ContentPresenter/>
						</TextBlock>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="true">
								<Setter Property="Background" Value="DarkGreen" TargetName="CustomItem"/>
								<Setter Property="Foreground" Value="Yellow" TargetName="CustomItem"/>
							</Trigger>
							<Trigger Property="IsSelected" Value="true">
								<Setter Property="FontWeight" Value="Bold"/>
								<Setter Property="Background" Value="Yellow" TargetName="CustomItem"/>
								<Setter Property="Foreground" Value="Black" TargetName="CustomItem"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style.Setters>
	</Style>

	<!-- Smart Meter 1 style ======================================================================================= -->
	<Style x:Key="Meter1">
        <Style.Setters>
            <Setter Property="meter:SmartMeter.SM_Background2" Value="DarkGray"/>
            <Setter Property="meter:SmartMeter.SM_Background3" Value="Lime"/>
            <Setter Property="meter:SmartMeter.SM_Foreground1" Value="Black"/>
            <Setter Property="meter:SmartMeter.SM_Minimum" Value="40"/>
            <Setter Property="meter:SmartMeter.SM_Maximum" Value="120"/>
            <Setter Property="meter:SmartMeter.SM_Threshold" Value="100"/>
        </Style.Setters>
    </Style>

	<!-- Smart Meter 2 style ======================================================================================= -->
	<Style x:Key="Meter2">
        <Style.Setters>
            <Setter Property="meter:SmartMeter.SM_Background2" Value="SlateBlue"/>
            <Setter Property="meter:SmartMeter.SM_Background3" Value="Lime"/>
            <Setter Property="meter:SmartMeter.SM_Foreground1" Value="White"/>
        </Style.Setters>
    </Style>

	<!-- Style for tool tips. ===================================== -->
	<Style TargetType="ToolTip" BasedOn="{StaticResource {x:Type ToolTip}}">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderBrush" Value="Transparent"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ToolTip">
					<Border Background="{StaticResource radBrush2}" 
                            CornerRadius="10"
                            BorderThickness="4">
						<Border.Effect>
							<DropShadowEffect BlurRadius="10"
                                              Color="Black"
                                              Direction="180"
                                              Opacity="0.5"
                                              ShadowDepth="20">
							</DropShadowEffect>
						</Border.Effect>
						<Label Foreground="{StaticResource Foreground1}" 
							   FontWeight="Bold">
							<ContentPresenter
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center">
							</ContentPresenter>
						</Label>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

</ResourceDictionary>